<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>協同產品設計實習-CD9-國立虎尾科技大學-機械設計工程系</title>
  
  
  <link href="/cd2018/atom.xml" rel="self"/>
  
  <link href="https://s40523119.github.io/cd2018/"/>
  <updated>2018-03-10T13:14:00.000Z</updated>
  <id>https://s40523119.github.io/cd2018/</id>
  
  <author>
    <name>林建安</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>將Node.js與npm納入隨身系統</title>
    <link href="https://s40523119.github.io/cd2018/2018/03/10/nodejs/"/>
    <id>https://s40523119.github.io/cd2018/2018/03/10/nodejs/</id>
    <published>2018-03-10T09:13:22.000Z</published>
    <updated>2018-03-10T13:14:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>為讓工作效率提升，想要將 <code>Node.js</code> 納入課程隨身系統當中，新版的node內都有內建套件安裝系統 <code>npm</code>，無須另外下載，系統裝置好後再進行安裝 <code>hexo</code> 網誌框架系統。</p><a id="more"></a><ul><li><p>Step 1 下載 Node.js binary</p><p>  前往 <a href="https://nodejs.org/download/release/v9.8.0/" target="_blank" rel="noopener">Node binary</a> 下載最新的Node。</p></li><li><p>Step 2 解壓縮至隨身系統內，並將資料夾更名為 <code>nodejs</code> 。</p></li><li><p>Step 3 並在 <code>start.bat</code>內新增路徑置系統內:</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> path5=<span class="variable">%Disk%</span>:\nodejs;<span class="variable">%Disk%</span>:\nodejs\node_modules\npm\bin;</span><br></pre></td></tr></table></figure><p>  並在 <code>path</code> 填上 <code>path5</code>:</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">path</span>=<span class="variable">%path1%</span>;<span class="variable">%path2%</span>;<span class="variable">%path3%</span>;<span class="variable">%path4%</span>;<span class="variable">%path5%</span></span><br></pre></td></tr></table></figure></li><li><p>Step 4 更新npm套件版本</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i npm</span><br></pre></td></tr></table></figure></li><li><p>Step 5 啟動隨身系統，並安裝 <code>hexo</code> 網誌框架系統。</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li></ul><p>以上完成 <code>Node.js Portable</code>以及安裝 <code>hexo</code> 網誌框架系統。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;為讓工作效率提升，想要將 &lt;code&gt;Node.js&lt;/code&gt; 納入課程隨身系統當中，新版的node內都有內建套件安裝系統 &lt;code&gt;npm&lt;/code&gt;，無須另外下載，系統裝置好後再進行安裝 &lt;code&gt;hexo&lt;/code&gt; 網誌框架系統。&lt;/p&gt;
    
    </summary>
    
    
      <category term="node.js" scheme="https://s40523119.github.io/cd2018/tags/node-js/"/>
    
      <category term="portable" scheme="https://s40523119.github.io/cd2018/tags/portable/"/>
    
  </entry>
  
  <entry>
    <title>利用Brython.js在瀏覽器執行Python程式</title>
    <link href="https://s40523119.github.io/cd2018/2018/03/07/w2/"/>
    <id>https://s40523119.github.io/cd2018/2018/03/07/w2/</id>
    <published>2018-03-07T12:37:32.000Z</published>
    <updated>2018-03-10T12:56:54.000Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/3.4.0/www/src/brython.js"></script><p>將<a href="/cd2018/2018/03/06/w1/">前一篇文章</a>程式以 <code>Brython.js</code> 在瀏覽器中執行，並改寫部分程式碼，得以與瀏覽器互動。</p><p><a href="https://brython.info/" target="_blank" rel="noopener">Brython</a> 是實現運行Python in web的 Javascript 程式庫，並提供HTML5環境（提供了DOM對象和事件接口）。</p><a id="more"></a><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial "></a>Tutorial </h1><ul><li><p>Step 1 引入Javascript檔案</p><p>  在自己的網頁靜態檔案中加入<a href="https://github.com/brython-dev/brython/releases/tag/3.4.0" target="_blank" rel="noopener">Brython.js</a>，或是引入線上CDN服務器內的<a href="https://github.com/brython-dev/brython/releases/tag/3.4.0" target="_blank" rel="noopener">CDN Brython</a>。<br>  我採取引用線上檔案的方式，引入需要使用到Brython的文章內，加入下列程式碼:</p></li></ul><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://cdn.rawgit.com/brython-dev/brython/3.4.0/www/src/brython.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><ul><li><p>Step 2 建立Brython區塊 </p><p>  為了要在網頁中運行 <code>Pyhton</code> 腳本，必須引用函數 <code>brython()</code> 。<br>  所以我們在這裡建立一個html body，並賦予它 <code>onload=brython()</code>，再建立一個div區塊，則裡面內容則放入想要運行的Python腳本。</p><ul><li><p>Note:</p><p>因為使用 <code>hexo</code> 來進行渲染md檔，所以我們的Python程式碼會被渲染，跳行的部分會被填入 <code>&lt;br&gt;</code> 所以我們得在程式碼頭尾部分加入，HEXO的標籤  <code>% raw % % endraw %</code> ，到時HEXO就會讓標籤內的文字以原始形式呈現。</p></li></ul></li></ul><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"brython()"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/python"</span>&gt;</span><span class="undefined">&#123;% raw %&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        ### Python code ###</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#123;% endraw %&#125;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><ul><li><p>Step 3 編寫程式</p><p>  我想透過按鈕來執行我的程式碼，所以得將按鈕綁定到特定的 <code>document</code> 。利用python的裝飾器來加入以下程式碼:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@document["mybutton"].bind("click")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#Your code</span></span><br></pre></td></tr></table></figure><p>  參照Brython官方文件，讀取檔案時，hexo會在文件名後面加入當下時間，所以我們得先建立偽裝的時間代碼:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fake_qs = <span class="string">'?foo=%s'</span> %time.time()</span><br></pre></td></tr></table></figure><p>  所以開啟文件時，在檔案名後方加入 <code>fake_qs</code> ，就可以讀去到文件，範例如下:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'./../../../../data/2a.txt'</span>+fake_qs) <span class="keyword">as</span> fh:</span><br></pre></td></tr></table></figure><p>  最後，在為我的程式配上一顆按鈕，並為它綁定ID到mybutton，按下去瀏覽器就會執行我的代碼:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"mybutton"</span> <span class="attr">class</span>=<span class="string">"next"</span>&gt;</span>執行<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>以上教程是適用於解決課程中問題，其他詳盡寫法請參照官方文件內容。</p><ul><li>完整程式碼:</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=<span class="string">"brython()"</span>&gt;</span><br><span class="line">    &lt;div class="paginator" &gt;</span><br><span class="line">        &lt;script type=<span class="string">"text/python"</span>&gt;&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">from</span> browser <span class="keyword">import</span> document,html</span><br><span class="line">            <span class="keyword">import</span> re, time</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 按下按鈕執行以下程式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">            @document["mybutton"].bind("click")</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">echo</span><span class="params">(ev)</span>:</span></span><br><span class="line">                fake_qs = <span class="string">'?foo=%s'</span> %time.time()</span><br><span class="line"></span><br><span class="line">                <span class="keyword">with</span> open(<span class="string">'./../../../../data/2a.txt'</span>+fake_qs) <span class="keyword">as</span> fh:</span><br><span class="line">                    data = [(re.findall(<span class="string">'405\d\d\d\d\d'</span>, data[int(i)])) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data))]</span><br><span class="line">                num = <span class="number">0</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">                    team = data[i]</span><br><span class="line">                    <span class="keyword">for</span> g <span class="keyword">in</span> range(len(team)):</span><br><span class="line">                        <span class="keyword">if</span> g%<span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">                            num += <span class="number">1</span></span><br><span class="line">                            document[<span class="string">'zone'</span>] &lt;= (<span class="string">'第'</span> + str(num) +<span class="string">'組:'</span> + str(team[g:g+<span class="number">3</span>]) + html.BR())</span><br><span class="line">                        </span><br><span class="line">                        </span><br><span class="line"><span class="meta">            @document["mybutton2"].bind("click")</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">(ev)</span>:</span></span><br><span class="line">                <span class="keyword">for</span> row <span class="keyword">in</span> document[<span class="string">'zone'</span>]:</span><br><span class="line">                    row.remove()</span><br><span class="line">        &#123;% endraw %&#125;&lt;/script&gt;            </span><br><span class="line">        &lt;button id="mybutton" class="next"&gt;執行&lt;/button&gt;&lt;button id="mybutton2" class="next"&gt;清除&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><body onload="brython()"><br>    <div class="paginator"><br>        <script type="text/python">        from browser import document,html        import re, time        # 按下按鈕執行以下程式        @document["mybutton"].bind("click")        def echo(ev):            fake_qs = '?foo=%s' %time.time()            with open('./../../../../2a.txt'+fake_qs) as fh:                data = fh.readlines() #逐行讀入                data = [(re.findall('405\d\d\d\d\d', data[int(i)])) for i in range(len(data))]            num = 0            for i in range(len(data)):                team = data[i]                for g in range(len(team)):                    if g%3 == 0:                        num += 1                        document['zone'] <= ('第' + str(num) +'組:' + str(team[g:g+3]) + html.BR())                                @document["mybutton2"].bind("click")        def delete(ev):            for row in document['zone']:                row.remove()                                    </script><br><br>    <button id="mybutton" class="next">執行</button><button id="mybutton2" class="next">清除</button><br>    </div><br></body><ul><li>輸出:</li></ul><div id="zone"><br><br></div><ul><li>Reference:<ul><li><a href="https://brython.info/static_doc/en/intro.html?lang=en]" target="_blank" rel="noopener">Brython Document</a></li><li><a href="https://brython.info/static_doc/en/cookbook/read_file.html" target="_blank" rel="noopener">Read the content of a file in Brython</a></li><li><a href="https://cdnjs.com/libraries/brython" target="_blank" rel="noopener">Brython CDN</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.rawgit.com/brython-dev/brython/3.4.0/www/src/brython.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;將&lt;a href=&quot;/cd2018/2018/03/06/w1/&quot;&gt;前一篇文章&lt;/a&gt;程式以 &lt;code&gt;Brython.js&lt;/code&gt; 在瀏覽器中執行，並改寫部分程式碼，得以與瀏覽器互動。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://brython.info/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Brython&lt;/a&gt; 是實現運行Python in web的 Javascript 程式庫，並提供HTML5環境（提供了DOM對象和事件接口）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://s40523119.github.io/cd2018/tags/Python/"/>
    
      <category term="Brython" scheme="https://s40523119.github.io/cd2018/tags/Brython/"/>
    
  </entry>
  
  <entry>
    <title>利用python將原始分組資料解析、排列</title>
    <link href="https://s40523119.github.io/cd2018/2018/03/06/w1/"/>
    <id>https://s40523119.github.io/cd2018/2018/03/06/w1/</id>
    <published>2018-03-06T13:55:00.000Z</published>
    <updated>2018-03-08T08:22:42.000Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/3.4.0/www/src/brython.js"></script><p>第九組組員40523119實作利用python將組別原始資料解析、分組、整理與排列，程式碼如下:</p><p>keyword:Python parse, Python 字串處理</p><a id="more"></a><ul><li>版本1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"2a.txt"</span>) <span class="keyword">as</span> fh:</span><br><span class="line">    data = fh.readlines() <span class="comment">#逐行讀入</span></span><br><span class="line">    data= [w.replace(<span class="string">'\n'</span>, <span class="string">''</span>) <span class="keyword">for</span> w <span class="keyword">in</span> data]    <span class="comment">#將跳行字符取代為空白</span></span><br><span class="line">    </span><br><span class="line">team_list = list() <span class="comment">#建立空list</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):  </span><br><span class="line">    team = data[i].split()  <span class="comment">#先將每一排切出來</span></span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> range(<span class="number">0</span>,len(team),<span class="number">3</span>):  </span><br><span class="line">        b = team[g:g+<span class="number">3</span>]   <span class="comment">#每三位學員為一組</span></span><br><span class="line">        team_list.append(b) <span class="comment">#加入先前建立的空list</span></span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(len(team_list)):  <span class="comment">#將資料填上組別編號</span></span><br><span class="line">    print(<span class="string">'第'</span> + str(num+<span class="number">1</span>) + <span class="string">'組:'</span> + str(team_list[num]))</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第1組:[&apos;40523115&apos;, &apos;40523108&apos;, &apos;40523116&apos;]</span><br><span class="line">第2組:[&apos;40523144&apos;, &apos;40523111&apos;, &apos;40523141&apos;]</span><br><span class="line">第3組:[&apos;40523104&apos;, &apos;40523102&apos;, &apos;40523123&apos;]</span><br><span class="line">第4組:[&apos;40523137&apos;, &apos;40523117&apos;, &apos;40523135&apos;]</span><br><span class="line">第5組:[&apos;40523147&apos;, &apos;40523146&apos;, &apos;40523145&apos;]</span><br><span class="line">第6組:[&apos;40523122&apos;, &apos;40523136&apos;, &apos;40523132&apos;]</span><br><span class="line">第7組:[&apos;40523127&apos;, &apos;40523126&apos;, &apos;40523125&apos;]</span><br><span class="line">第8組:[&apos;40523124&apos;, &apos;40523118&apos;, &apos;40523131&apos;]</span><br><span class="line">第9組:[&apos;40523121&apos;, &apos;40523120&apos;, &apos;40523119&apos;]</span><br><span class="line">第10組:[&apos;40523105&apos;, &apos;40523106&apos;, &apos;40523107&apos;]</span><br><span class="line">第11組:[&apos;40523143&apos;, &apos;40523128&apos;, &apos;40523129&apos;]</span><br><span class="line">第12組:[&apos;40523130&apos;, &apos;40523139&apos;, &apos;40523133&apos;]</span><br><span class="line">第13組:[&apos;40523142&apos;, &apos;40523148&apos;, &apos;40523140&apos;]</span><br><span class="line">第14組:[&apos;40523113&apos;, &apos;40523138&apos;, &apos;40523134&apos;]</span><br></pre></td></tr></table></figure><ul><li>版本2:</li></ul><p>利用套件 <code>re</code> 來快速解析原始資料，減去對系統字符處理的手續，進而直接擷取理想的資料組態。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"2a.txt"</span>) <span class="keyword">as</span> fh:</span><br><span class="line">    data = fh.readlines() <span class="comment">#逐行讀入</span></span><br><span class="line">    data = [(re.findall(<span class="string">'405\d\d\d\d\d'</span>, data[int(i)])) <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data))]</span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">    team = data[i]</span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> range(len(team)):</span><br><span class="line">        <span class="keyword">if</span> g%<span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            print(<span class="string">'第'</span> + str(num) +<span class="string">'組:'</span> + str(team[g:g+<span class="number">3</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">第1組:[&apos;40523115&apos;, &apos;40523108&apos;, &apos;40523116&apos;]</span><br><span class="line">第2組:[&apos;40523144&apos;, &apos;40523111&apos;, &apos;40523141&apos;]</span><br><span class="line">第3組:[&apos;40523104&apos;, &apos;40523102&apos;, &apos;40523123&apos;]</span><br><span class="line">第4組:[&apos;40523137&apos;, &apos;40523117&apos;, &apos;40523135&apos;]</span><br><span class="line">第5組:[&apos;40523147&apos;, &apos;40523146&apos;, &apos;40523145&apos;]</span><br><span class="line">第6組:[&apos;40523122&apos;, &apos;40523136&apos;, &apos;40523132&apos;]</span><br><span class="line">第7組:[&apos;40523127&apos;, &apos;40523126&apos;, &apos;40523125&apos;]</span><br><span class="line">第8組:[&apos;40523124&apos;, &apos;40523118&apos;, &apos;40523131&apos;]</span><br><span class="line">第9組:[&apos;40523121&apos;, &apos;40523120&apos;, &apos;40523119&apos;]</span><br><span class="line">第10組:[&apos;40523105&apos;, &apos;40523106&apos;, &apos;40523107&apos;]</span><br><span class="line">第11組:[&apos;40523143&apos;, &apos;40523128&apos;, &apos;40523129&apos;]</span><br><span class="line">第12組:[&apos;40523130&apos;, &apos;40523139&apos;, &apos;40523133&apos;]</span><br><span class="line">第13組:[&apos;40523142&apos;, &apos;40523148&apos;, &apos;40523140&apos;]</span><br><span class="line">第14組:[&apos;40523113&apos;, &apos;40523138&apos;, &apos;40523134&apos;]</span><br></pre></td></tr></table></figure><ul><li>Reference:<ul><li><a href="https://docs.python.org/3/library/re.html]" target="_blank" rel="noopener">Python Regular expression operations</a></li><li><a href="https://segmentfault.com/q/1010000003069314/a-1020000003069680" target="_blank" rel="noopener">在python中如何简单优雅地将list分组</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.rawgit.com/brython-dev/brython/3.4.0/www/src/brython.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;第九組組員40523119實作利用python將組別原始資料解析、分組、整理與排列，程式碼如下:&lt;/p&gt;
&lt;p&gt;keyword:Python parse, Python 字串處理&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://s40523119.github.io/cd2018/tags/Python/"/>
    
  </entry>
  
</feed>
